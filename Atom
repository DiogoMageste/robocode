package Triosao;


import robocode.*;
import java.awt.Color;
import robocode.HitByBulletEvent;
import robocode.HitRobotEvent;
import robocode.ScannedRobotEvent;
import static robocode.util.Utils.normalRelativeAngleDegrees;

// API help : https://robocode.sourceforge.io/docs/robocode/robocode/Robot.html

/**
 * Atom - a robot by (your name here)
 */
public class Atom extends AdvancedRobot
{
int dist = 60;
	public void run() {
	
    setColors(Color.black,Color.black,Color.lightGray);
	
         setAdjustGunForRobotTurn(true);
         setAdjustRadarForGunTurn(true);
		 
		while(true) {
		
          setAhead(150); 
          setTurnRight(Math.random() * 90 - 45);
		  setTurnRadarRight(360);

         execute();
		 
		}
	}

	public void onScannedRobot(ScannedRobotEvent e) {
	
		double distancia = e.getDistance();
		double anguloMira = normalRelativeAngleDegrees(
            e.getBearing() + getHeading() - getGunHeading());
            setTurnGunRight(anguloMira);

	    double potencia = (distancia < 100) ? 2 : 1;
        fire(potencia);
 
        setTurnRadarRight(normalRelativeAngleDegrees(
            getHeading() + e.getBearing() - getRadarHeading()
        ));
		
	}
	
	public void onHitByBullet(HitByBulletEvent e) {
		
	setTurnRight(normalRelativeAngleDegrees(90 - (getHeading() - e.getHeading())));
        setAhead(dist);
        dist *= -1;
		
	}	
	
     public void onHitRobot(HitRobotEvent e) {
	
        double turnGunAmt = normalRelativeAngleDegrees(
            e.getBearing() + getHeading() - getGunHeading());
             
            setTurnGunRight(turnGunAmt);
		    fire(3);
            back(40);
     }

	public void onHitWall(HitWallEvent e) {
		
		back(100);
		turnRight(90);		
	}	
}
